; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\OBJ\main.o --asm_dir=..\LIST\ --list_dir=..\LIST\ --depend=..\OBJ\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\USER\INC -IC:\Keil_v4.6\ARM\RV31\INC -IC:\Keil_v4.6\ARM\CMSIS\Include -IC:\Keil_v4.6\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\main.crf ..\..\USER\SRC\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  IO_Init PROC
;;;109    
;;;110    void IO_Init(void)
000000  b510              PUSH     {r4,lr}
;;;111    {
;;;112    
;;;113      	RCC->APB2ENR|=1<<0; 
000002  4860              LDR      r0,|L1.388|
000004  6980              LDR      r0,[r0,#0x18]
000006  f0400001          ORR      r0,r0,#1
00000a  495e              LDR      r1,|L1.388|
00000c  6188              STR      r0,[r1,#0x18]
;;;114    	RCC->APB2ENR|=1<<2;
00000e  4608              MOV      r0,r1
000010  6980              LDR      r0,[r0,#0x18]
000012  f0400004          ORR      r0,r0,#4
000016  6188              STR      r0,[r1,#0x18]
;;;115    	RCC->APB2ENR|=1<<3;
000018  4608              MOV      r0,r1
00001a  6980              LDR      r0,[r0,#0x18]
00001c  f0400008          ORR      r0,r0,#8
000020  6188              STR      r0,[r1,#0x18]
;;;116     	RCC->APB2ENR|=1<<4;
000022  4608              MOV      r0,r1
000024  6980              LDR      r0,[r0,#0x18]
000026  f0400010          ORR      r0,r0,#0x10
00002a  6188              STR      r0,[r1,#0x18]
;;;117    
;;;118       	GPIOA->CRH=0X33333333;
00002c  f04f3033          MOV      r0,#0x33333333
000030  4955              LDR      r1,|L1.392|
000032  6008              STR      r0,[r1,#0]
;;;119    	GPIOA->CRL=0X33333333;
000034  1f09              SUBS     r1,r1,#4
000036  6008              STR      r0,[r1,#0]
;;;120    	GPIOA->ODR=0XFFFF;	 
000038  f64f70ff          MOV      r0,#0xffff
00003c  4952              LDR      r1,|L1.392|
00003e  3108              ADDS     r1,r1,#8
000040  6008              STR      r0,[r1,#0]
;;;121    
;;;122    	GPIOB->CRL=0X88888888;
000042  f04f3088          MOV      r0,#0x88888888
000046  4951              LDR      r1,|L1.396|
000048  6008              STR      r0,[r1,#0]
;;;123    	GPIOB->CRH=0X33333333;
00004a  f04f3033          MOV      r0,#0x33333333
00004e  1d09              ADDS     r1,r1,#4
000050  6008              STR      r0,[r1,#0]
;;;124    	GPIOA->ODR=0XFFFF;
000052  f64f70ff          MOV      r0,#0xffff
000056  494c              LDR      r1,|L1.392|
000058  3108              ADDS     r1,r1,#8
00005a  6008              STR      r0,[r1,#0]
;;;125    
;;;126       	GPIOC->CRH=0X33333333;
00005c  f04f3033          MOV      r0,#0x33333333
000060  494b              LDR      r1,|L1.400|
000062  6048              STR      r0,[r1,#4]
;;;127    	GPIOC->CRL=0X33333333; 	
000064  6008              STR      r0,[r1,#0]
;;;128    	GPIOC->ODR=0XFFFF;	
000066  f64f70ff          MOV      r0,#0xffff
00006a  60c8              STR      r0,[r1,#0xc]
;;;129    		    
;;;130       	JTAG_Set(JTAG_SWD_DISABLE);	 //JTAG功能禁止，复用JTAG端口
00006c  2002              MOVS     r0,#2
00006e  f7fffffe          BL       JTAG_Set
;;;131    }
000072  bd10              POP      {r4,pc}
                          ENDP

                  RCC_Configuration PROC
;;;68     *******************************************************************************/
;;;69     void RCC_Configuration(void)
000074  b510              PUSH     {r4,lr}
;;;70     { 
;;;71     
;;;72       ErrorStatus HSEStartUpStatus;
;;;73       RCC_DeInit();
000076  f7fffffe          BL       RCC_DeInit
;;;74       RCC_HSEConfig(RCC_HSE_ON);   
00007a  f44f3080          MOV      r0,#0x10000
00007e  f7fffffe          BL       RCC_HSEConfig
;;;75       HSEStartUpStatus = RCC_WaitForHSEStartUp();
000082  f7fffffe          BL       RCC_WaitForHSEStartUp
000086  4604              MOV      r4,r0
;;;76     
;;;77       if(HSEStartUpStatus == SUCCESS)	  
000088  2c01              CMP      r4,#1
00008a  d11e              BNE      |L1.202|
;;;78       {
;;;79       
;;;80         RCC_HCLKConfig(RCC_SYSCLK_Div1);  
00008c  2000              MOVS     r0,#0
00008e  f7fffffe          BL       RCC_HCLKConfig
;;;81         RCC_PCLK2Config(RCC_HCLK_Div1);		   
000092  2000              MOVS     r0,#0
000094  f7fffffe          BL       RCC_PCLK2Config
;;;82     	RCC_PCLK1Config(RCC_HCLK_Div2);	 	  
000098  02a0              LSLS     r0,r4,#10
00009a  f7fffffe          BL       RCC_PCLK1Config
;;;83         RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);	
00009e  f44f11e0          MOV      r1,#0x1c0000
0000a2  0420              LSLS     r0,r4,#16
0000a4  f7fffffe          BL       RCC_PLLConfig
;;;84         RCC_PLLCmd(ENABLE); 
0000a8  2001              MOVS     r0,#1
0000aa  f7fffffe          BL       RCC_PLLCmd
;;;85         while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)	  
0000ae  bf00              NOP      
                  |L1.176|
0000b0  2039              MOVS     r0,#0x39
0000b2  f7fffffe          BL       RCC_GetFlagStatus
0000b6  2800              CMP      r0,#0
0000b8  d0fa              BEQ      |L1.176|
;;;86            {
;;;87            }
;;;88         RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK); 
0000ba  2002              MOVS     r0,#2
0000bc  f7fffffe          BL       RCC_SYSCLKConfig
;;;89         while(RCC_GetSYSCLKSource() != 0x08)	  
0000c0  bf00              NOP      
                  |L1.194|
0000c2  f7fffffe          BL       RCC_GetSYSCLKSource
0000c6  2808              CMP      r0,#8
0000c8  d1fb              BNE      |L1.194|
                  |L1.202|
;;;90            { 
;;;91            }
;;;92          }
;;;93     
;;;94         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_AFIO, ENABLE); 
0000ca  2101              MOVS     r1,#1
0000cc  2005              MOVS     r0,#5
0000ce  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;95     }
0000d2  bd10              POP      {r4,pc}
;;;96     
                          ENDP

                  main PROC
;;;38     
;;;39     main()
0000d4  b51c              PUSH     {r2-r4,lr}
;;;40     { 
;;;41     	RCC_Configuration();;//系统时钟设置
0000d6  f7fffffe          BL       RCC_Configuration
;;;42     	delay_init(72);		//延时初始化
0000da  2048              MOVS     r0,#0x48
0000dc  f7fffffe          BL       delay_init
;;;43     	GPIOA->ODR ^= (1 <<3);						//LED1闪烁一次	   
0000e0  4829              LDR      r0,|L1.392|
0000e2  3008              ADDS     r0,r0,#8
0000e4  6800              LDR      r0,[r0,#0]
0000e6  f0800008          EOR      r0,r0,#8
0000ea  4927              LDR      r1,|L1.392|
0000ec  3108              ADDS     r1,r1,#8
0000ee  6008              STR      r0,[r1,#0]
;;;44     	LCD_Init();
0000f0  f7fffffe          BL       LCD_Init
;;;45     	IO_Init(); 
0000f4  f7fffffe          BL       IO_Init
;;;46     	LCD_Clear(BLUE);       //清屏 
0000f8  201f              MOVS     r0,#0x1f
0000fa  f7fffffe          BL       LCD_Clear
;;;47     	POINT_COLOR=YELLOW;
0000fe  f64f70e0          MOV      r0,#0xffe0
000102  4924              LDR      r1,|L1.404|
000104  8008              STRH     r0,[r1,#0]
;;;48     	BACK_COLOR=BLUE;
000106  201f              MOVS     r0,#0x1f
000108  4923              LDR      r1,|L1.408|
00010a  8008              STRH     r0,[r1,#0]
;;;49        	LCD_ShowString(20,50,"QF Welcom");
00010c  a223              ADR      r2,|L1.412|
00010e  2132              MOVS     r1,#0x32
000110  2014              MOVS     r0,#0x14
000112  f7fffffe          BL       LCD_ShowString
;;;50     	LCD_ShowString(20,100,"STM32 Camera");
000116  a224              ADR      r2,|L1.424|
000118  2164              MOVS     r1,#0x64
00011a  2014              MOVS     r0,#0x14
00011c  f7fffffe          BL       LCD_ShowString
;;;51     	LCD_ShowString(20,150,"OV7670 Initing......");
000120  a225              ADR      r2,|L1.440|
000122  2196              MOVS     r1,#0x96
000124  2014              MOVS     r0,#0x14
000126  f7fffffe          BL       LCD_ShowString
;;;52     	InitI2C0();
00012a  f7fffffe          BL       InitI2C0
;;;53     	while(1!=Cmos7670_init());   //CMOS初始化	
00012e  bf00              NOP      
                  |L1.304|
000130  f7fffffe          BL       Cmos7670_init
000134  2801              CMP      r0,#1
000136  d1fb              BNE      |L1.304|
;;;54     	Exit_Init(GPIOC, GPIO_Pin_4, GPIO_Mode_IPU, EXTI_Trigger_Falling, 2, 5);	//VSYNC	 	
000138  2005              MOVS     r0,#5
00013a  2102              MOVS     r1,#2
00013c  230c              MOVS     r3,#0xc
00013e  2248              MOVS     r2,#0x48
000140  e9cd1000          STRD     r1,r0,[sp,#0]
000144  2110              MOVS     r1,#0x10
000146  4812              LDR      r0,|L1.400|
000148  f7fffffe          BL       Exit_Init
;;;55     
;;;56       	while(1) 
00014c  bf00              NOP      
                  |L1.334|
00014e  e7fe              B        |L1.334|
;;;57     	{		  		
;;;58     
;;;59     	}
;;;60     }
;;;61     
                          ENDP

                  CLK_generate PROC
;;;96     
;;;97     void CLK_generate(void)
000150  b500              PUSH     {lr}
;;;98     {
000152  b087              SUB      sp,sp,#0x1c
;;;99     	GPIO_InitTypeDef GPIO_InitStructure1;
;;;100     	RCC_ClocksTypeDef RCC_Clocks;   	
;;;101    	GPIO_InitStructure1.GPIO_Pin = GPIO_Pin_8;
000154  f44f7080          MOV      r0,#0x100
000158  f8ad0018          STRH     r0,[sp,#0x18]
;;;102    	GPIO_InitStructure1.GPIO_Mode = GPIO_Mode_AF_PP ; 
00015c  2018              MOVS     r0,#0x18
00015e  f88d001b          STRB     r0,[sp,#0x1b]
;;;103    	GPIO_InitStructure1.GPIO_Speed = GPIO_Speed_50MHz;
000162  2003              MOVS     r0,#3
000164  f88d001a          STRB     r0,[sp,#0x1a]
;;;104    	GPIO_Init(GPIOA, &GPIO_InitStructure1);  	
000168  a906              ADD      r1,sp,#0x18
00016a  4807              LDR      r0,|L1.392|
00016c  1f00              SUBS     r0,r0,#4
00016e  f7fffffe          BL       GPIO_Init
;;;105    	RCC_GetClocksFreq(&RCC_Clocks);  
000172  a801              ADD      r0,sp,#4
000174  f7fffffe          BL       RCC_GetClocksFreq
;;;106    	RCC_MCOConfig(RCC_MCO_HSE);   
000178  2006              MOVS     r0,#6
00017a  f7fffffe          BL       RCC_MCOConfig
;;;107    
;;;108    }
00017e  b007              ADD      sp,sp,#0x1c
000180  bd00              POP      {pc}
;;;109    
                          ENDP

000182  0000              DCW      0x0000
                  |L1.388|
                          DCD      0x40021000
                  |L1.392|
                          DCD      0x40010804
                  |L1.396|
                          DCD      0x40010c00
                  |L1.400|
                          DCD      0x40011000
                  |L1.404|
                          DCD      POINT_COLOR
                  |L1.408|
                          DCD      BACK_COLOR
                  |L1.412|
00019c  51462057          DCB      "QF Welcom",0
0001a0  656c636f
0001a4  6d00    
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L1.424|
0001a8  53544d33          DCB      "STM32 Camera",0
0001ac  32204361
0001b0  6d657261
0001b4  00      
0001b5  00                DCB      0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L1.440|
0001b8  4f563736          DCB      "OV7670 Initing......",0
0001bc  37302049
0001c0  6e697469
0001c4  6e672e2e
0001c8  2e2e2e2e
0001cc  00      
0001cd  00                DCB      0
0001ce  00                DCB      0
0001cf  00                DCB      0

                  __ARM_use_no_argv EQU 0
